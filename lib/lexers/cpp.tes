! C/C++ Lexing !

@[lexer.test.cpp]{
  [_ :S.[c,cc,cpp,cxx,h,hh,hpp,hxx,ipp,m,mm,sma] ]_
}

@[lexer.set.cpp]{
  ESSETLEXER,SCLEX_CPP
  0ESSETKEYWORDS
    and and_eq asm auto bitand bitor bool break
    case catch char class compl const const_cast continue
    default delete do double dynamic_cast else enum explicit export extern false float for
    friend goto if inline int long mutable namespace new not not_eq
    operator or or_eq private protected public
    register reinterpret_cast return short signed sizeof static static_cast struct switch
    template this throw true try typedef typeid typename union unsigned using
    virtual void volatile wchar_t while xor xor_eq
  ! Doxygen keywords !
  2ESSETKEYWORDS
    a addindex addtogroup anchor arg attention
    author b brief bug c class code date def defgroup deprecated dontinclude
    e em endcode endhtmlonly endif endlatexonly endlink endverbatim enum example exception
    f$ f[ f] file fn hideinitializer htmlinclude htmlonly
    if image include ingroup internal invariant interface latexonly li line link
    mainpage name namespace nosubgrouping note overload
    p page par param post pre ref relates remarks return retval
    sa section see showinitializer since skip skipline struct subsection
    test throw todo typedef union until
    var verbatim verbinclude version warning weakgroup $ @ \ & < > # { }
  :M[color.comment],1M[color.set]
  :M[color.comment],2M[color.set]
  :M[color.comment],3M[color.set]
  :M[color.number],4M[color.set]
  :M[color.keyword],5M[color.set]
  :M[color.string],6M[color.set]
  :M[color.string],7M[color.set]
  :M[color.preproc],9M[color.set]
  :M[color.operator],10M[color.set]
}

@:[lexer.auto]{
  :M[lexer.test.cpp]"S Q.fEB :M[lexer.set.cpp] Oend '
}
